#include <stdio.h>
#include <stdbool.h>

#define MAX_SIZE 100

typedef struct {
    int data[MAX_SIZE];
    int top;
} Stack;

void initialize(Stack* stack) {
    stack->top = -1;
}

bool isEmpty(Stack* stack) {
    return stack->top == -1;
}


bool isFull(Stack* stack) {
    return stack->top == MAX_SIZE - 1;
}

void push(Stack* stack, int item) {
    if (isFull(stack)) {
        printf("Stack Overflow: Cannot push element onto the stack.\n");
    } else {
        stack->data[++stack->top] = item;
    }
}

int pop(Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack Underflow: Cannot pop element from the stack.\n");
        return -1; // Return a special value to indicate an error
    } else {
        return stack->data[stack->top--];
    }
}

int peek(Stack* stack) {
    if (isEmpty(stack)) {
        printf("Stack is empty.\n");
        return -1; // Return a special value to indicate an error
    } else {
        return stack->data[stack->top];
    }
}

int main() {
    Stack myStack;
    initialize(&myStack);

    push(&myStack, 10);
    push(&myStack, 20);
    push(&myStack, 30);

    printf("Top element of the stack: %d\n", peek(&myStack));

    printf("Pop elements from the stack: ");
    while (!isEmpty(&myStack)) {
        printf("%d ", pop(&myStack));
    }
    printf("\n");

    return 0;
}
